{"version":3,"sources":["components/auth/login.js"],"names":["System","register","_export","_context","util","Vue","loginForm","setters","_util","_vue","execute","template","props","data","email","password","remember","errors","global","loading","methods","validateLogin","event","this","preventDefault","$http","post","url","then","response","message","timeout","$dispatch","setTimeout","window","location","href","status","formatValidationErrors","$setValidationErrors","component"],"mappings":"AAAA,YAEAA,QAAOC,UAAU,OAAQ,OAAQ,SAAUC,EAASC,GAChD,GAAIC,GAAMC,EAAKC,CACf,QACIC,SAAU,SAAUC,GAAhBJ,EAAAI,GAED,SAAUC,GADdJ,EAAAI,EAAAA,aAICC,QAAS,WAFbJ,GACAK,SAAU,uBACVC,OAAQ,OACRC,KAAM,WACF,OACIC,MAAO,GACPC,SAAU,GACVC,UAAU,EACVC,QACIC,UACAJ,SACAC,aAEJI,SAAS,IAGjBC,SACIC,cAAe,SAAUC,GAGrBC,KAAKJ,SAAU,EAHaG,EAMtBE,iBANsBD,KASvBE,MAAMC,KAAKH,KAAKI,KACjBb,MAAOS,KAAKT,MACZC,SAAUQ,KAAKR,SACfC,SAAUO,KAAKP,WAChBY,KAAK,SAAUC,GAEd,GAAIhB,IAAQiB,QAASD,EAAShB,KAAKiB,QAASC,QAAS,IAErDR,MAAKS,UAAU,eAAgBnB,GAE/BoB,WAAW,WACPC,OAAOC,SAASC,KAAOP,EAAShB,KAAKsB,UACtC,MAIJ,SAAUN,GAET,GAAuB,KAAnBA,EAASQ,OAAe,CAGxBd,KAAKN,OAAOC,OAASW,EAAShB,KAAKI,OAAOC,UAE1C,IAAID,GAASb,EAAKkC,uBAAuBT,EAAShB,KAAKI,OACvDM,MAAKgB,qBAAqBtB,OAEzB,CAGD,GAAIJ,IAAQiB,QAAS,gGAAiGC,QAAS,IAC/HR,MAAKS,UAAU,eAAgBnB,GAdhBU,KAmBdJ,SAAU,OAMnBjB,EAAQ,UAALG,EAAImC,UAAU,aAAclC","file":"components/auth/login.js","sourcesContent":["/*!\n * FluentKit v0.1.0\n * (c) 2016 Lee Mason\n * Released under the MIT License.\n */\nimport * as util from 'util'\nimport Vue from 'vue'\n\nvar loginForm = {\n    template: '#login-form-template',\n    props: ['url'],\n    data: function(){\n        return {\n            email: '',\n            password: '',\n            remember: false,\n            errors: {\n                global: [],\n                email: [],\n                password: []\n            },\n            loading: false\n        }\n    },\n    methods: {\n        validateLogin: function (event) {\n\n            //show the loader\n            this.loading = true;\n\n            //prevent submission\n            event.preventDefault();\n\n            //validate - authorize the request\n            this.$http.post(this.url, {\n                email: this.email,\n                password: this.password,\n                remember: this.remember\n            }).then(function (response) {\n\n                var data = {message: response.data.message, timeout: 3000};\n\n                this.$dispatch('notification', data);\n\n                setTimeout(function () {\n                    window.location.href = response.data.location;\n                }, 2000);\n\n                //don't hide the loader here, we don't want them clicking while we redirect them.\n\n            }, function (response) {\n\n                if (response.status == 422) {\n\n                    //validation/authorization error - set the errors as returned or clear\n                    this.errors.global = response.data.errors.global || [];\n\n                    var errors = util.formatValidationErrors(response.data.errors);\n                    this.$setValidationErrors(errors);\n\n                }else{\n\n                    //something bad happened\n                    var data = {message: 'We encountered a technical problem performing this request, please contact the administrator.', timeout: 3000};\n                    this.$dispatch('notification', data);\n\n                }\n\n                //hide the loader, they can try again\n                this.loading = false;\n            });\n        }\n    }\n};\n\nexport default Vue.component('login-form', loginForm);\n\n//export default loginForm"],"sourceRoot":"/source/"}