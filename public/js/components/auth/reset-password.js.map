{"version":3,"sources":["components/auth/reset-password.js"],"names":["System","register","_export","_context","util","Vue","resetPasswordForm","setters","_util","_vue","execute","template","props","data","email","password","password_confirmation","errors","global","loading","methods","validateResetPassword","event","this","preventDefault","$http","post","url","token","then","response","message","timeout","$root","$dispatch","setTimeout","window","location","href","status","formatValidationErrors","$setValidationErrors","component"],"mappings":"AAAA,YAEAA,QAAOC,UAAU,OAAQ,OAAQ,SAAUC,EAASC,GAChD,GAAIC,GAAMC,EAAKC,CACf,QACIC,SAAU,SAAUC,GAAhBJ,EAAAI,GAED,SAAUC,GADdJ,EAAAI,EAAAA,aAICC,QAAS,WAFbJ,GACAK,SAAU,gCACVC,OAAQ,MAAO,SACfC,KAAM,WACF,OACIC,MAAO,GACPC,SAAU,GACVC,sBAAuB,GACvBC,QACIC,UACAJ,SACAC,YACAC,0BAEJG,SAAS,IAGjBC,SACIC,sBAAuB,SAAUC,GAG7BC,KAAKJ,SAAU,EAHqBG,EAM9BE,iBAN8BD,KAS/BE,MAAMC,KAAKH,KAAKI,KACjBb,MAAOS,KAAKT,MACZc,MAAOL,KAAKK,MACZb,SAAUQ,KAAKR,SACfC,sBAAuBO,KAAKP,wBAC7Ba,KAAK,SAAUC,GAEd,GAAIjB,IAAQkB,QAASD,EAASjB,KAAKkB,QAASC,QAAS,IAErDT,MAAKU,MAAMC,UAAU,eAAgBrB,GAErCsB,WAAW,WACPC,OAAOC,SAASC,KAAOR,EAASjB,KAAKwB,UACtC,MAEJ,SAAUP,GAET,GAAuB,KAAnBA,EAASS,OAAe,CAGxBhB,KAAKN,OAAOC,OAASY,EAASjB,KAAKI,OAAOC,UAE1C,IAAID,GAASb,EAAKoC,uBAAuBV,EAASjB,KAAKI,OACvDM,MAAKkB,qBAAqBxB,OAEzB,CAGD,GAAIJ,IAAQkB,QAAS,gGAAiGC,QAAS,IAC/HT,MAAKU,MAAMC,UAAU,eAAgBrB,GAdtBU,KAmBdJ,SAAU,OAMnBjB,EAAQ,UAALG,EAAIqC,UAAU,sBAAuBpC","file":"components/auth/reset-password.js","sourcesContent":["/*!\n * FluentKit v0.1.0\n * (c) 2016 Lee Mason\n * Released under the MIT License.\n */\nimport * as util from 'util'\nimport Vue from 'vue'\n\nvar resetPasswordForm = {\n    template: '#reset-password-form-template',\n    props: ['url', 'token'],\n    data: function(){\n        return {\n            email: '',\n            password: '',\n            password_confirmation: '',\n            errors: {\n                global: [],\n                email: [],\n                password: [],\n                password_confirmation: []\n            },\n            loading: false\n        }\n    },\n    methods: {\n        validateResetPassword: function (event) {\n\n            //show the loader\n            this.loading = true;\n\n            //prevent submission\n            event.preventDefault();\n\n            //validate - authorize the request\n            this.$http.post(this.url, {\n                email: this.email,\n                token: this.token,\n                password: this.password,\n                password_confirmation: this.password_confirmation\n            }).then(function (response) {\n\n                var data = {message: response.data.message, timeout: 3000};\n\n                this.$root.$dispatch('notification', data);\n\n                setTimeout(function () {\n                    window.location.href = response.data.location;\n                }, 2000);\n\n            }, function (response) {\n\n                if (response.status == 422) {\n\n                    //validation/authorization error - set the errors as returned or clear\n                    this.errors.global = response.data.errors.global || [];\n\n                    var errors = util.formatValidationErrors(response.data.errors);\n                    this.$setValidationErrors(errors);\n\n                }else{\n\n                    //something bad happened\n                    var data = {message: 'We encountered a technical problem performing this request, please contact the administrator.', timeout: 3000};\n                    this.$root.$dispatch('notification', data);\n\n                }\n\n                //hide the loader, they can try again\n                this.loading = false;\n            });\n        }\n    }\n};\n\nexport default Vue.component('reset-password-form', resetPasswordForm);\n\n//export default resetPasswordForm"],"sourceRoot":"/source/"}