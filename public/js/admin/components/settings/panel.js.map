{"version":3,"sources":["admin/components/settings/panel.js"],"names":["System","register","_export","_context","Vue","adminSettingsPanel","setters","_vue","execute","template","props","group","Object","validator","data","can_save","original","ready","this","JSON","parse","stringify","methods","triggerSave","$dispatch","hideSave","resetPanel","sections","forEach","section","index","fields","field","fieldIndex","value","bind","setTimeout","closePanel","$broadcast","watch","handler","mutation","errors","length","modified","touched","Error","e","deep","events","saved","component"],"mappings":"AAAA,YAEAA,QAAOC,UAAU,OAAQ,SAAUC,EAASC,GACxC,GAAIC,GAAKC,CACT,QACIC,SAAU,SAAUC,GAArBH,EAAAG,EAAAA,aAGCC,QAAS,WADbH,GACAI,SAAU,iCACVC,OACIC,MAAOC,OACPC,UAAWD,QAEfE,KAAM,WACF,OACIC,UAAU,EACVC,cAGRC,MAAO,WACHC,KAAKF,SAAWG,KAAKC,MAAMD,KAAKE,UAAUH,KAAKP,SAEnDW,SACIC,YAAa,WACTL,KAAKM,UAAU,SAEnBC,SAAU,WAENP,KAAKH,UAAW,GAEpBW,WAAY,WAGRR,KAAKF,SAASW,SAASC,QAAQ,SAASC,EAASC,GAC7CD,EAAQE,OAAOH,QAAQ,SAASI,EAAOC,GACnCf,KAAKP,MAAMgB,SAASG,GAAOC,OAAOE,GAAYC,MAAQF,EAAME,OAC9DC,KAAKjB,QACTiB,KAAKjB,OAPWkB,WAUP,WACPlB,KAAKO,YACPU,KAAKjB,MAAO,MAGlBmB,WAAY,WAERnB,KAAKoB,WAAW,eAChBpB,KAAKM,UAAU,iBAGvBe,OACI5B,OACI6B,QAAS,SAASN,EAAOO,GAErB,IACIP,EAAMP,SAASC,QAAQ,SAAUC,EAASC,GACtCD,EAAQE,OAAOH,QAAQ,SAAUI,EAAOC,GACpC,GAAID,EAAMU,OAAOC,OAAS,GAAuB,GAAlBX,EAAMY,UAAsC,GAAjBZ,EAAMa,QAC5D,KAAM,IAAIC,OAAM,0BAI/B,MAAMC,GAEH,YADA7B,KAAKH,UAAW,GAIpBG,KAAKH,UAAW,GAEpBiC,MAAM,IAGdC,QACIC,MAAO,WAEH,MADAhC,MAAKO,YACE,KAMPvB,EAAQ,UADLE,EAAI+C,UAAU,uBAAwB9C","file":"admin/components/settings/panel.js","sourcesContent":["/*!\n * FluentKit v0.1.0\n * (c) 2016 Lee Mason\n * Released under the MIT License.\n */\nimport Vue from 'vue'\n\nvar adminSettingsPanel = {\n    template: '#admin-settings-panel-template',\n    props: {\n        group: Object,\n        validator: Object\n    },\n    data: function(){\n        return {\n            can_save: false,\n            original: {}\n        };\n    },\n    ready: function(){\n        this.original = JSON.parse(JSON.stringify(this.group));\n    },\n    methods: {\n        triggerSave: function(){\n            this.$dispatch('save');\n        },\n        hideSave: function(){\n            //reset the can_save option to hide the save box\n            this.can_save = false;\n        },\n        resetPanel: function(){\n\n            //loop and set each original value\n            this.original.sections.forEach(function(section, index){\n                section.fields.forEach(function(field, fieldIndex){\n                    this.group.sections[index].fields[fieldIndex].value = field.value;\n                }.bind(this));\n            }.bind(this));\n\n            //allow watchers to run first, then hide\n            setTimeout(function(){\n                this.hideSave();\n            }.bind(this), 500);\n\n        },\n        closePanel: function(){\n            //send event up and down\n            this.$broadcast('close-panel');\n            this.$dispatch('close-panel');\n        }\n    },\n    watch: {\n        group: {\n            handler: function(value, mutation){\n\n                try {\n                    value.sections.forEach(function (section, index) {\n                        section.fields.forEach(function (field, fieldIndex) {\n                            if (field.errors.length > 0 && field.modified == true  && field.touched == true) {\n                                throw new Error('validation failed!')\n                            }\n                        });\n                    });\n                }catch(e){\n                    this.can_save = false;\n                    return;\n                }\n\n                this.can_save = true;\n            },\n            deep: true\n        }\n    },\n    events: {\n        saved: function(){\n            this.hideSave();\n            return true;\n        }\n    }\n};\n\nexport default Vue.component('admin-settings-panel', adminSettingsPanel);\n\n//export default notifications"],"sourceRoot":"/source/"}