{"version":3,"sources":["admin/components/roles/create.js"],"names":["System","register","_export","_context","util","Vue","_","adminRolesCreate","setters","_util","_vue","_lodash","execute","template","data","role","label","name","permissions","loading","methods","triggerSave","this","$http","post","$root","routes","route","then","response","message","timeout","$dispatch","window","location","href","id","status","errors","formatValidationErrors","$setValidationErrors","closeForm","event","preventDefault","stopPropagation","component"],"mappings":"AAAA,YAEAA,QAAOC,UAAU,OAAQ,MAAO,UAAW,SAAUC,EAASC,GAC1D,GAAIC,GAAMC,EAAKC,EAAGC,CAElB,QACIC,SAAU,SAAUC,GADhBL,EAAAK,GAGD,SAAUC,GAFdL,EAAAK,EAAAA,YAII,SAAUC,GAHdL,EAAAK,EAAAA,aAMCC,QAAS,WAJbL,GACAM,SAAU,+BACVC,KAAM,WACF,OACIC,MACIC,MAAO,GACPC,KAAM,GACNC,gBAEJC,SAAS,IAGjBC,SACIC,YAAa,WAETC,KAAKH,SAAU,EAEfG,KAAKC,MAAMC,KAAKF,KAAKG,MAAMC,OAAOC,MAAM,oBAAqBL,KAAKP,MAAMa,KAAK,SAAUC,GAEnF,GAAIf,IAAQgB,QAASD,EAASf,KAAKgB,QAASC,QAAS,IAErDT,MAAKU,UAAU,eAAgBlB,GAE/BmB,OAAOC,SAASC,KAAOb,KAAKG,MAAMC,OAAOC,MAAM,oBAAqBS,GAAIP,EAASf,KAAKC,KAAKqB,MAE5F,SAAUP,GAET,GAAuB,KAAnBA,EAASQ,OAAe,CAGxB,GAAIC,GAASlC,EAAKmC,uBAAuBV,EAASf,KAAKwB,OAH/BhB,MASnBkB,qBAAqBF,OAExB,IAAuB,KAAnBT,EAASQ,OAAe,CAE9B,GAAIvB,IAAQgB,QAASD,EAASf,KAAMiB,QAAS,IAC7CT,MAAKU,UAAU,eAAgBlB,OAC9B,CAGD,GAAIA,IAAQgB,QAAS,gGAAiGC,QAAS,IAC/HT,MAAKU,UAAU,eAAgBlB,GAInCQ,KAAKH,SAAU,KAIvBsB,UAAW,SAASC,GAChBA,EAAMC,iBACND,EAAME,kBACNtB,KAAKU,UAAU,mBAMf9B,EAAQ,UADLG,EAAIwC,UAAU,qBAAsBtC","file":"admin/components/roles/create.js","sourcesContent":["/*!\n * FluentKit v0.1.0\n * (c) 2016 Lee Mason\n * Released under the MIT License.\n */\nimport * as util from 'util'\nimport Vue from 'vue'\nimport _ from 'lodash'\n\nvar adminRolesCreate = {\n    template: '#admin-roles-create-template',\n    data: function(){\n        return {\n            role: {\n                label: '',\n                name: '',\n                permissions: []\n            },\n            loading: false\n        };\n    },\n    methods: {\n        triggerSave: function(){\n\n            this.loading = true;\n\n            this.$http.post(this.$root.routes.route('api.roles.create'), this.role).then(function (response) {\n\n                var data = {message: response.data.message, timeout: 3000};\n\n                this.$dispatch('notification', data);\n\n                window.location.href = this.$root.routes.route('admin.roles.edit', {id: response.data.role.id});\n\n            }, function (response) {\n\n                if (response.status == 422) {\n\n                    //validation/authorization error - set the errors as returned or clear\n                    var errors = util.formatValidationErrors(response.data.errors);\n                    /*var errors = _.flatMap(response.data.errors, function(messages, key){\n                        return _.map(messages, function(message){\n                            return {field: key, message: message};\n                        });\n                    });*/\n                    this.$setValidationErrors(errors);\n\n                }else if (response.status == 401) {\n                    //something bad happened\n                    var data = {message: response.data, timeout: 3000};\n                    this.$dispatch('notification', data);\n                }else{\n\n                    //something bad happened\n                    var data = {message: 'We encountered a technical problem performing this request, please contact the administrator.', timeout: 3000};\n                    this.$dispatch('notification', data);\n\n                }\n\n                this.loading = false;\n\n            });\n        },\n        closeForm: function(event){\n            event.preventDefault();\n            event.stopPropagation();\n            this.$dispatch('close-create');\n        }\n    }\n};\n\nexport default Vue.component('admin-roles-create', adminRolesCreate);\n\n//export default notifications"],"sourceRoot":"/source/"}